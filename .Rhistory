data = read.csv('../data/rwc2015.csv', header = TRUE)
setwd("~/Dropbox/DataAnalytics/RugbyWC2015")
data = read.csv('data/rwc2015.csv', header = TRUE)
View(data)
dim(data)
names(data)
getwd()
#setwd("~/Dropbox/DataAnalytics/RugbyWC2015")
getwd()
setwd("~/Dropbox/DataAnalytics/RugbyWC2015/code")
getwd()
data = read.csv('../data/rwc2015.csv', header = TRUE)
names(data)
summary(data)
install.packages("reshape")
library(reshape)
new_data = cast(data, player_name ~ metric)
View(new_data)
new_data = cast(data, player_name + country ~ metric)
View(new_data)
unique(data$metric)
length(unique(data$metric))
unique(data$metric)
head(new_data)
playerPositions = read.csv('../data/playerPositions.csv', header = TRUE)
getwd()
setwd("~/Dropbox/DataAnalytics/RugbyWC2015/code")
data = read.csv('../data/rwc2015.csv', header = TRUE)
playerPositions = read.csv('../data/playerPositions.csv', header = TRUE)
View(playerPositions)
head(split(playerPositions$Player.name, ','))
strsplit(playerPositions$Player.name, ',')
sapply(playerPositions$Player.name, strsplit, split=',')
class(playerPositions$Player.name)
class(playerPositions$Player.name[1])
summary(new_data)
playerPositions = read.csv('../data/playerPositions.csv', header = TRUE)
View(playerPositions)
new_data[is.na(new_data)] <- 0
View(new_data)
View(new_data)
summary(new_data)
new_data <- cast(data, player_name + country ~ metric)
new_data_NAs <- new_data
new_data[is.na(new_data)] <- 0
max_cogl <- new_data[new_data$carries_over_gain_line = max(new_data$carries_over_gain_line)]
max_cogl <- new_data[new_data$carries_over_gain_line == max(new_data$carries_over_gain_line)]
max_cogl <- new_data[new_data$carries_over_gain_line == 36]
max_cogl <- new_data[new_data$carries_over_gain_line == 36]
new_data <- cast(data, player_name + country ~ metric)
source('~/.active-rstudio-document', echo=TRUE)
View(new_data)
View(new_data)
max_cogl <- new_data[new_data$carries_over_gain_line == 36]
max_cogl <- new_data[carries_over_gain_line == 36]
new_data[,1]
head(new_data)
max_cogl <- new_data[new_data[,4] == 36]
max_cogl <- new_data[new_data[,4] == 36,]
View(max_cogl)
max_cogl <- new_data[new_data$carries_over_gain_linedata == 36,]
max_carries <- new_data[new_data$carries == max(new_data$carries),]
View(max_carries)
max_cogl <- new_data[new_data$carries_over_gain_linedata == max(new_data$carries_over_gain_linedata),]
max_cogl <- new_data[new_data$carries_over_gain_line == max(new_data$carries_over_gain_line),]
View(max_cogl)
max_cb <- new_data[new_data$clean_breaks == max(new_data$clean_breaks),]
View(max_cb)
View(max_cb)
max_los <- new_data[new_data$lineout_steals == max(new_data$lineout_steals),]
View(playerPositions)
View(max_los)
max_low <- new_data[new_data$lineouts_won == max(new_data$lineouts_won),]
View(max_low)
max_mm <- new_data[new_data$metres_made == max(new_data$metres_made),]
View(max_mm)
View(max_mm)
max_om <- new_data[new_data$offloads_made == max(new_data$offloads_made),]
View(max_om)
View(max_om)
max_tries <- new_data[new_data$tries == max(new_data$tries),]
max_tow <- new_data[new_data$turnovers_won == max(new_data$turnovers_won),]
View(max_tries)
View(max_tries)
View(max_tow)
View(max_tow)
install.packages("plotly")
install.packages("plotly")
install.packages("plotly", type = 'source')
max_tow <- new_data[new_data$turnovers_won == max(new_data$turnovers_won),]
kmeansRes <- kmeans(new_data, centers = 9)
names(kmeansRes)
head(kmeansRes$cluster, n = 20)
merged <- merge(x = new_data, y = playerPositions, by.x = 'player_name', by.y = 'Player.name')
View(merged)
missing <- merged$player_name - new_data$player_name
missing <- new_data$player_name[-merged$player_name]
missing <- new_data[-merged$player_name]
class(merged)
new_data$player_name[1]
merged <- merge(x = new_data, y = playerPositions, by.x = 'player_name', by.y = 'Player.name', all.x = TRUE)
View(merged)
missing <- merged[is.na(merged$Pos)]
missing <- merged[is.na(merged$Pos), ]
View(missing)
merged_right <- merge(x = new_data, y = playerPositions, by.x = 'player_name', by.y = 'Player.name', all.y = TRUE)
missing_right <- merged_right[is.na(merged_right$Pos), ]
missing_left <- merged_left[is.na(merged_left$Pos), ]
merged_left <- merge(x = new_data, y = playerPositions, by.x = 'player_name', by.y = 'Player.name', all.x = TRUE)
missing_left <- merged_left[is.na(merged_left$Pos), ]
View(missing_left)
View(missing_left)
View(missing_right)
View(merged_right)
missing_right <- merged_right[is.na(merged_right$Country), ]
merged_right <- merge(x = new_data, y = playerPositions, by.x = 'player_name', by.y = 'Player.name', all.y = TRUE)
missing_right <- merged_right[is.na(merged_right$Country), ]
View(missing_right)
View(missing_right)
missing_right <- merged_right[is.na(merged_right$country), ]
View(missing_right)
View(missing_right)
nerged <- merge(x = new_data, y = playerPositions, by.x = 'player_name', by.y = 'Player.name')
merged <- merge(x = new_data, y = playerPositions, by.x = 'player_name', by.y = 'Player.name')
View(nerged)
rm(nerged)
kmeansRes$cluster
class(kmeansRes$cluster)
new_data$cluster <- kmeansRes$cluster
View(new_data)
View(new_data)
source('~/.active-rstudio-document', echo=TRUE)
View(merged)
View(merged)
kmeansRes$size
kmeansRes$size
clust9 <- merged[merged$cluster == 9, ]
View(clust9)
sum(kmeansRes$size)
summary(clust9$Pos)
source('~/.active-rstudio-document', echo=TRUE)
View(clust9)
source('~/.active-rstudio-document', echo=TRUE)
table(clust9$Pos ~ clust9$matches)
table(clust9$Pos, clust9$matches)
table(merged$Pos, merged$cluster)
merged[merged$cluster == 4 & merged$Pos == 'centre']
merged[merged$cluster == 4 & merged$Pos == 'centre', ]
clust4 <- merged[merged$cluster == 4, ]
View(clust4)
merged[merged$lineouts_won > 0]
merged[merged$lineouts_won > 0, ]
View(data)
clust4 <- merged[merged$cluster == 4, 1:2]
clust4 <- merged[merged$cluster == 4, ]
merged[merged$cluster == 4 & merged$Pos == 'centre', 1:2]
table(merged$Pos, merged$cluster)
clust3 <- merged[merged$cluster == 3, ]
View(clust3)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
new_data[new_data$matches <= 0, 1:2]
View(new_data)
columnsToDivide <- c(3,4,5,6,7,9,10,11,12)
new_data[1,]
source('~/.active-rstudio-document', echo=TRUE)
table(merged$Pos, merged$cluster)
View(new_data)
source('~/.active-rstudio-document', echo=TRUE)
View(new_data)
source('~/.active-rstudio-document', echo=TRUE)
head <- head(new_data)
head
head[, 1]
head[, 1:8 & 10:13]
head[1, 1:8 & 10:13]
head[1, 1:7 & 9:13]
head[1, -8]
head[1, head$matches]
head[1, -head$matches]
source('~/.active-rstudio-document', echo=TRUE)
View(new_data)
new_data[is.na(new_data)]
source('~/.active-rstudio-document', echo=TRUE)
View(new_data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
names(new_data)
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
source('~/.active-rstudio-document', echo=TRUE)
detach("package:reshape", unload=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(reshape2)
new_data <- cast(data, player_name + country ~ metric)
detach(reshape2)
detach('reshape2')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
test <- data.matrix(new_data[, -8])
View(test)
test <- data.matrix(new_data[, -c(1,2,8)])
View(test)
source('~/.active-rstudio-document', echo=TRUE)
kmeansRes$cluster
View(new_data)
length(kmeansRes$cluster)
table(merged$cluster, merged$Pos)
View(clust3)
summary(clust3)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("cluster")
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("HSAUR")
library("HSAUR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
dissE <- daisy(kmeansIn)
source('~/.active-rstudio-document', echo=TRUE)
plot(sk2)
View(clust4)
table(merged$cluster, merged$Pos)
plot(sk2, col=c('blue'))
source('~/.active-rstudio-document', echo=TRUE)
table(merged$cluster, merged$Pos)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
table(merged$cluster, merged$Pos)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
table(merged$cluster, merged$Pos)
source('~/.active-rstudio-document', echo=TRUE)
table(merged$cluster, merged$Pos)
source('~/.active-rstudio-document', echo=TRUE)
table(merged$cluster, merged$Pos)
source('~/.active-rstudio-document', echo=TRUE)
table(merged$cluster, merged$Pos)
clust1 <- merged[merged$cluster == 1, ]
clust2 <- merged[merged$cluster == 2, ]
View(clust1)
merged[merged$cluster == 2 & merged$Pos == 'hooker']
merged[merged$cluster == 2 & merged$Pos == 'hooker', ]
merged[merged$cluster == 1 & merged$Pos == 'hooker', ]
View(clust2)
summary(clust1$Pos)
merged[merged$cluster == 1 & merged$Pos == 'scrum-half', ]
merged[merged$cluster == 2 & merged$Pos == 'centre', ]
merged[merged$cluster == 2 & merged$Pos == 'back-row', ]
View(clust3)
merged[merged$cluster == 3 & merged$Pos == 'centre', ]
merged[merged$cluster == 3 & merged$Pos == 'wing', ]
merged[merged$cluster == 3 & merged$Pos == 'fullback', ]
merged[merged$cluster == 3 & merged$Pos == 'fly-half', ]
plot(sk2, col=c('blue', 'red', 'green))
plot(sk2, col=c('blue', 'red', 'green'))
plot(sk2, col=c('green','blue', 'red'))
plot(sk2, col=c('green', 'red', 'blue'))
boxplot(merged$tries ~ merged$tries)
plot(sk2, col=graphColors)
graphColors = c('green', 'red', 'blue')
plot(sk2, col=graphColors)
boxplot(merged$tries ~ merged$tries, varwidth = TRUE, col=graphColors)
boxplot(merged$tries ~ merged$cluster, varwidth = TRUE, col=graphColors)
boxplot(merged$tries ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Tries scored per game', main='Tries scored per game comparison')
boxplot(merged$tries ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Tries scored per game', main='Tries scored per game cluster comparison')
boxplot(merged$metres_made ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
hist(merged$metres_made, col='orange')
plot(density(merged$metres_made), lwd = 3, col='orange')
hist(merged$metres_made, col='orange')
```
plot(density(merged$metres_made), lwd = 3, col='orange')
carrots <- data.frame(length = rnorm(100000, 6, 2))
cukes <- data.frame(length = rnorm(50000, 7, 2.5))
View(carrots)
carrots$veg <- 'carrot'
View(carrots)
library(ggplot2)
ggplot(merged, aes(merged$metres_made, fill = merged$cluster)) + geom_density(alpha = 0.2)
ggplot(merged, aes(metres_made, fill = cluster)) + geom_density(alpha = 0.2)
ggplot(merged, aes(merged$metres_made, fill = merged$cluster))
ggplot(merged, aes(merged$metres_made, fill = merged$cluster))
ggplot(merged, aes(merged$metres_made, fill = merged$cluster)) + geom_density(alpha = 0.2)
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
boxplot(merged$metres_made ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
ggplot(merged, aes(merged$tries, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster), colour = graphColors)) + geom_density(alpha = 0.2)
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2, colour=graphColors)
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2, colour='blue')
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2, fill='blue')
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_color_manual(values = graphColors)
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_color_manual(values = c('yellow', 'orange', 'pink'))
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster), order=as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_color_manual(values = graphColors)
boxplot(merged$metres_made ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster), order=as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_color_manual(values = graphColors)
graphColors = c('red', 'green', 'blue')
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
boxplot(merged$metres_made ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.5)
ggplot(merged, aes(merged$metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.3)
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.3)
ggplot(merged, aes(metres_made, fill = cluster)) + geom_density(alpha = 0.3)
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.3)
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
ggplot(merged, aes(merged$tries, fill = guide_legend(as.factor(merged$cluster), title = 'Clusters'))) + geom_density(alpha = 0.2)
ggplot(merged, aes(merged$tries, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2)
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_manual(values = graphColors, name = 'Clusters')
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_manual( name = 'Clusters')
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_manual( name = 'Clusters')
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
ggplot(merged, aes(x=cluster, y=meters_made, fill=cluster)) + geom_boxplot()
ggplot(merged, aes(x=cluster, y=metres_made, fill=cluster)) + geom_boxplot()
ggplot(merged, aes(x=as.factor(merged$cluster), y=metres_made, fill=as.factor(merged$cluster))) + geom_boxplot()
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
ggplot(merged, aes(x=as.factor(merged$cluster), y=metres_made, fill=as.factor(merged$cluster))) + geom_boxplot()
ggplot(merged, aes(x=as.factor(merged$cluster), y=metres_made, fill=as.factor(merged$cluster))) + geom_boxplot() + scale_fill_discrete(name = 'Clusters')
boxplot(merged$metres_made ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
boxplot(merged$turnovers_won ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
ggplot(merged, aes(turnovers_won, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
boxplot(merged$clean_breaks ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
boxplot(merged$clean_breaks ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Clean breaks made per game', main='Clean breaks made cluster comparison')
ggplot(merged, aes(clean_breaks, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
ggplot(merged, aes(clean_breaks, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
boxplot(merged$clean_breaks ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Clean breaks made per game', main='Clean breaks made cluster comparison')
boxplot(merged$carries_over_gain_line ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Carries over gain line per game', main='Carries over gain line cluster comparison')
ggplot(merged, aes(carries_over_gain_line, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
boxplot(merged$turnovers_won ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
ggplot(merged, aes(turnovers_won, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
ggplot(merged, aes(density(metres_made), fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
View(max_mm)
boxplot(merged$metres_made ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Meters made per game', main='Meters made cluster comparison')
View(max_cb)
View(merged)
View(max_om)
table(merged$cluster, merged$Pos)
plot(sk2, col=graphColors)
silPlot <- silhouette(kmeansRes$cl, dE2)
plot(silPlot, col=graphColors)
boxplot(merged$H.met ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Carries over gain line per game', main='Carries over gain line cluster comparison')
boxplot(as.numeric(merged$H.met) ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Carries over gain line per game', main='Carries over gain line cluster comparison')
boxplot(merged$EBF ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Carries over gain line per game', main='Carries over gain line cluster comparison')
(
boxplot(as.numeric(merged$EBF) ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Carries over gain line per game', main='Carries over gain line cluster comparison')
boxplot(as.numeric(merged$EBF) ~ merged$cluster, varwidth = TRUE, col=graphColors, xlab='Cluster', ylab='Carries over gain line per game', main='Carries over gain line cluster comparison')
class(merged$EBF)
summary(as.numeric(merged$EBF))
summary(as.numeric(merged$lbs)
summary(as.numeric(merged$lbs))
View(merged)
summary(as.numeric(merged$Pos))
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
ggplot(merged, aes(carries_over_gain_line, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters')
View(max_cogl)
merged[merged$player_name== 'Michael Leitch']
merged[merged$player_name== 'Michael Leitch', ]
source('~/.active-rstudio-document', echo=TRUE)
plot(silPlot, col=graphColors, main='Silhouette plot of 3 player clusters')
plot(silPlot, col=graphColors, main='Silhouette plot of 9 player clusters')
set.seed(1)
kmeansIn <- data.matrix(new_data[, -c(1,2,8)])
kmeansRes <- kmeans(kmeansIn, centers = 3)
new_data$cluster <- kmeansRes$cluster
merged <- merge(x = new_data, y = playerPositions, by.x = 'player_name', by.y = 'Player.name')
table(merged$cluster, merged$Pos)
graphColors = c('red', 'green', 'blue')
dE <- daisy(kmeansIn)
dE2 <- dE^2
silPlot <- silhouette(kmeansRes$cl, dE2)
plot(silPlot, col=graphColors, main='Silhouette plot of 3 player clusters')
silPlot
summary(silPlot)
ggplot(merged, aes(metres_made, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters') + ggtitle('Meters made cluster comparison')
View(max_om)
View(max_mm)
summary(merged$metres_made)
ggplot(merged, aes(carries_over_gain_line, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters') + ggtitle('Meters made cluster comparison')
ggplot(merged, aes(carries_over_gain_line, fill = as.factor(merged$cluster))) + geom_density(alpha = 0.2) + scale_fill_discrete(name = 'Clusters') + ggtitle('Carries over gain line cluster comparison')
View(max_low)
View(clust3)
source('~/.active-rstudio-document', echo=TRUE)
View(clust3)
View(clust2)
table(merged$cluster, merged$Pos)
table(merged$Pos, merged$cluster)
library(plotly)
install.packages("plotly")
devtools::install_github("ropensci/plotly")
install.packages("devtools")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
devtools::install_github("ropensci/plotly")
install.packages("viridis")
setRepositories()
setRepositories(ind = c(1,2,7,8))
install.packages("plotly")
setRepositories()
install.packages("installr")
